apply plugin: 'com.android.application'
apply plugin: 'android-apt'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yy.MM.dd')
    return formattedDate
}

def getBranchName() {
    def branch = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
    return branch
}

def branchName = getBranchName()

android {
    compileSdkVersion 23
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.recipes"
        minSdkVersion 21
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile rootProject.file('debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "TEST_LABEL", "\"RELEASE buildType!\""
        }

        mobicaRelease {
            debuggable true
            signingConfig signingConfigs.debug
            buildConfigField "String", "TEST_LABEL", "\"MOBICA BYDGOSZCZ buildType!\""
        }

        internalRelease {
            debuggable true
            signingConfig signingConfigs.debug
            buildConfigField "String", "TEST_LABEL", "\"INTERNAL App buildType!\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace("${output.outputFile.name}", "${getDate()}" +
                            "._TEST_v${variant.versionCode}_${variant.name}_${branchName}" +
                            ".apk"))
        }
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}
apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        resourcePackageName 'com.recipes'
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:23.0.1'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.android.support:support-annotations:23.0.1'

    compile 'com.fasterxml.jackson.core:jackson-core:2.4.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.2'

    compile 'com.squareup.picasso:picasso:2.3.3'

    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    testCompile('org.robolectric:robolectric:3.0-rc2') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    testCompile('org.mockito:mockito-core:1.10.19') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    testCompile 'junit:junit:4.12'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:runner:0.3') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}